machine code - programming languages spoken by computer processor
  - Every program you run on your computer has been converted (compiled into machine code )

Level of Abstraction
-Javascript -> C/C++ -> Assembly Language -> Machine Language

Ecmascript - The standard javascript is based on

A javascript engine:
A program that converts javascript code into something the computer processor can understand
  - It should follow the Ecmascript standard on how the language should work and what features it should have

First-class Functions:
Everything you can do with other types you can do with functions

An expression:
A block of code that results in a value

name/value pair:
a name which maps to a value

object literal:
Name/value pairs separated by commas and surrounded by curly braces

primitive:
a type of data that represents a single value
  - like a number or a string. In other words, not an object

scope:
where in code you have access to particular variable or function

JSON:
"Javascript object notation"
  - a standard for strucuring data that is inspired by javascript object literals
  - javascript engines are built to understand it
  ex.
  {
    "firstname" : "John",
    "lastname" : "Doe",
    "address" : {
      "street" : "101 Main St.",
      "city" : "New York",
      "state" : "NY"
    }
  }

Revealing Module pattern:
exposing only the properties and methods you want via an returned object
-very common and clean wya to structure and protect code within modules 
